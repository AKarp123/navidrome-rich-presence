{
  "name": "subsonic-rpc",
  "module": "index.ts",
  "type": "module",
  "private": true,
  "devDependencies": {
    "@types/bun": "latest",
    "@typescript-eslint/parser": "^8.35.1",
    "eslint-config-xo": "^0.47.0"
  },
  "peerDependencies": {
    "typescript": "^5"
  },
  "scripts": {
    "start": "bun run src/index.ts",
    "dev": "bun run src/index.ts --watch",
    "lint": "bunx eslint src/*.ts",
    "lint:fix": "bunx eslint src/*.ts --fix",
    "build:win64": "mkdir ./dist/win64; cp config.example.json ./dist/win64/config.json; bun build --compile --minify --target=bun-windows-x64 ./src/index.ts --outfile ./dist/win64/subsonic-rpc.exe",
    "build:linux64": "mkdir ./dist/linux64; cp config.example.json ./dist/linux64/config.json; bun build --compile --minify --target=bun-linux-x64 ./src/index.ts --outfile ./dist/linux64/subsonic-rpc-linux64",
    "build:linux-arm64": "mkdir ./dist/linux-arm64; cp config.example.json ./dist/linux-arm64/config.json; bun build --compile --minify --target=bun-linux-arm64 ./src/index.ts --outfile ./dist/linux-arm64/subsonic-rpc-arm64",
    "build:macos-arm64": "mkdir ./dist/macos-arm64; cp config.example.json ./dist/macos-arm64/config.json; bun build --compile --minify --target=bun-darwin-arm64 ./src/index.ts --outfile ./dist/macos-arm64/subsonic-rpc-mac-arm64",
    "build-all": "rm ./dist/*;  bun run build:win64 && bun run build:linux64 && bun run build:linux-arm64 && bun run build:macos-arm64;",
    "zip": "cd dist && zip -r subsonic-rpc-win64.zip win64/ && zip -r subsonic-rpc-linux64.zip linux64/ && zip -r subsonic-rpc-linux-arm64.zip linux-arm64/ && zip -r subsonic-rpc-macos-arm64.zip macos-arm64/; rm -R -- */",
    "build": "bun run clean; bun run build-all && bun run zip",
    "clean": "rm -rf dist/*"
  },
  "dependencies": {
    "@xhayper/discord-rpc": "^1.2.2",
    "discord-api-types": "^0.38.14",
    "eslint": ">=9.25.0",
    "subsonic-api": "^3.1.2"
  }
}
